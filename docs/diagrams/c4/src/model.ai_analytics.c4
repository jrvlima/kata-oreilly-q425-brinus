model {
    extend mobiltiy_corp {
        
        ai_analytics = group 'AI & Analytics' {

            style {
                color amber
                opacity 20%
                border dashed
            }
        
            description 'RAG and semantic search built from Gold-layer summaries & facts. Reused by Ops, Support, Planning.'
            
            vector_db = database 'Vector DB' {
                description "Vector DB - Semantic search and embeddings storage for AI-powered knowledge retrieval"

                link ../fleeting_ai/vector-db.md 'Full Documentation'

                technology 'Qdrant'
            }
            
            rag_api = container 'RAG API' {
                description "RAG API - Retrieval-Augmented Generation for grounded AI assistance with citations"

                link ../fleeting_ai/rag-api.md 'Full Documentation'

                technology 'FastAPI + LlamaIndex/LangChain + LiteLLM/Bedrock'

                -> vector_db 'Retrieves context for LLM' {
                        title 'Semantic Retrieval'
                        description 'RAG API performs nearest-neighbor search to retrieve most relevant context documents for LLM prompts.'
                        technology 'Hybrid Search (Dense + Sparse) • Qdrant'
                    }
                -> gold_marts 'Queries curated facts' {
                        title 'Fact Retrieval'
                        description 'Structured SQL queries to curated marts provide validated, explainable business facts complementing semantic retrieval.'
                        technology 'SQL • Postgres / ClickHouse'
                    }
                -> read_model_db 'Reads current projections' {
                        title 'Operational Snapshot Access'
                        description 'RAG agents query CQRS read models for up-to-date operational data (e.g., vehicle availability, user sessions).'
                        technology 'PostgreSQL • REST / GraphQL'
                    }
            }

            // DAG that prepares embeddings from Gold
            embed_pipeline = container 'Embedding Pipeline' {
                description "Embedding Pipeline - Transform Gold data into semantic vectors for RAG retrieval"

                link ../fleeting_ai/embedding-pipeline.md 'Full Documentation'

                technology 'Airflow task / Streaming job'

                -> vector_db 'Upserts vectors' {
                        title 'Vector Store Population'
                        description 'Embeddings and metadata are persisted for semantic search and RAG pipelines.'
                        technology 'Qdrant / Pinecone | REST / gRPC API'
                    }
            }
        
        }
    }
}